// Code generated by MockGen. DO NOT EDIT.
// Source: ./processor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	iop "nuledger/iop"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDataHandler is a mock of DataHandler interface.
type MockDataHandler struct {
	ctrl     *gomock.Controller
	recorder *MockDataHandlerMockRecorder
}

// MockDataHandlerMockRecorder is the mock recorder for MockDataHandler.
type MockDataHandlerMockRecorder struct {
	mock *MockDataHandler
}

// NewMockDataHandler creates a new mock instance.
func NewMockDataHandler(ctrl *gomock.Controller) *MockDataHandler {
	mock := &MockDataHandler{ctrl: ctrl}
	mock.recorder = &MockDataHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataHandler) EXPECT() *MockDataHandlerMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockDataHandler) Handle(arg0 iop.OperationInput) (iop.StateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", arg0)
	ret0, _ := ret[0].(iop.StateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Handle indicates an expected call of Handle.
func (mr *MockDataHandlerMockRecorder) Handle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockDataHandler)(nil).Handle), arg0)
}
